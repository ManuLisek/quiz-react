{"version":3,"sources":["components/President/President.js","data/dataPresidents.js","components/PresidentsList/PresidentsList.js","components/AddPresident/AddPresident.js","components/StartGame/StartGame.js","components/Result/Result.js","components/Clock/Clock.js","components/GiveUp/GiveUp.js","components/Footer/Footer.js","components/App.js","index.js"],"names":["President","props","president","name","lastName","termOfOffice","isPresidentVisible","isPresidentGuessed","className","presidents","PresidentsLists","presidentsList","map","index","AddPresident","isInputDisabled","type","placeholder","disabled","onChange","e","change","StartGame","clickStart","onClick","Result","result","length","Clock","minutes","seconds","lastSeconds","GiveUp","isGiveUpVisible","clickEnd","Footer","App","handleChangeInput","findIndex","toLowerCase","target","value","setState","handleClick","isQuizRunning","interval","setInterval","state","handleEndGame","clearInterval","forEach","prevProps","prevState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.970ba5f5.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './President.scss';\r\n\r\n\r\nconst President = (props) => {\r\n\r\n  const {name, lastName, termOfOffice, isPresidentVisible, isPresidentGuessed} = props.president\r\n\r\n  return (\r\n    \r\n    <tr>\r\n      <td className={`${isPresidentGuessed ? \" guessedPresident\" : \"\"} ${isPresidentVisible ? \"\" : \" hiddenPresident\"}`}>{name} {lastName}</td>\r\n      <td>{termOfOffice}</td>\r\n    </tr>\r\n)\r\n}\r\n\r\nPresident.propTypes = {\r\n    isPresidentVisible: PropTypes.bool,\r\n    isPresidentGuessed: PropTypes.bool,\r\n  }\r\n\r\nexport default President;","export const presidents = [\r\n  {\r\n    name: 'Gabriel',\r\n    lastName: 'Narutowicz',\r\n    termOfOffice: '1922'\r\n  },\r\n  {\r\n    name: 'Stanisław',\r\n    lastName: 'Wojciechowski',\r\n    termOfOffice: '1922-1926'\r\n  },\r\n  {\r\n    name: 'Ignacy',\r\n    lastName: 'Mościcki',\r\n    termOfOffice: '1926-1939'\r\n  },\r\n  {\r\n    name: 'Bolesław',\r\n    lastName: 'Bierut',\r\n    termOfOffice: '1947-1952'\r\n  },\r\n  {\r\n    name: 'Wojciech',\r\n    lastName: 'Jaruzelski',\r\n    termOfOffice: '1989-1990'\r\n  },\r\n  {\r\n\r\n    name: 'Lech',\r\n    lastName: 'Wałęsa',\r\n    termOfOffice: '1990-1995'\r\n  },\r\n  {\r\n    name: 'Aleksander',\r\n    lastName: 'Kwaśniewski',\r\n    termOfOffice: '1995-2005'\r\n  },\r\n  {\r\n    name: 'Lech',\r\n    lastName: 'Kaczyński',\r\n    termOfOffice: '2005-2010'\r\n  },\r\n  {\r\n    name: 'Bronisław',\r\n    lastName: 'Komorowski',\r\n    termOfOffice: '2010-2015'\r\n  },\r\n  {\r\n    name: 'Andrzej',\r\n    lastName: 'Duda',\r\n    termOfOffice: '2015- '\r\n  },\r\n]","import President from '../President/President';\r\nimport {presidents} from '../../data/dataPresidents';\r\nimport PropTypes from 'prop-types';\r\nimport  './PresidentsList.scss';\r\n\r\n\r\nconst PresidentsLists = (props) => {\r\n    const {isPresidentVisible, isPresidentGuessed} = props\r\n    const presidentsList = presidents.map((president, index) => (\r\n        <President key={index} president={president} isPresidentVisible={isPresidentVisible} isPresidentGuessed={isPresidentGuessed}/>\r\n        \r\n    ))\r\n\r\n  return (\r\n    <div className='presidentsList'>\r\n      <table>\r\n        <thead>\r\n         <tr>\r\n            <th>Prezydent</th>\r\n            <th>Lata urzędowania</th>\r\n         </tr>\r\n        </thead>\r\n        <tbody>\r\n          {presidentsList}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nPresidentsLists.propTypes = {\r\n    isPresidentVisible: PropTypes.bool,\r\n    isPresidentGuessed: PropTypes.bool,\r\n  }\r\n\r\nexport default PresidentsLists;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AddPresident.scss';\r\n\r\nconst AddPresident = (props) => {\r\n    const {isInputDisabled} = props;\r\n  return (\r\n    <div className=\"addPresident\">\r\n      <h1 className=\"addPresident__header\">Odgadnij wszystkich polskich prezydentów: </h1>\r\n      <input className=\"addPresident__input input\" type=\"text\" placeholder=\"Dodaj prezydenta...\" disabled={isInputDisabled} onChange={(e) => props.change(e)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nAddPresident.propTypes = {\r\n    change: PropTypes.func,\r\n    isInputDisabled: PropTypes.bool,\r\n  };\r\n\r\nexport default AddPresident;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './StartGame.scss';\r\n\r\nconst StartGame = (props) => {\r\n\r\n    const {clickStart} = props\r\n    \r\n    return (\r\n      <div className=\"start\">\r\n        <h2>Kliknik guzik aby rozpocząć quiz!</h2>\r\n        <button className=\"btn btn-start\" onClick={clickStart}>Start</button>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nStartGame.propTypes = {\r\n    clickStart: PropTypes.func,\r\n  }\r\n\r\nexport default StartGame;","import React from 'react';\r\nimport {presidents} from '../../data/dataPresidents';\r\nimport PropTypes from 'prop-types';\r\nimport './Result.scss';\r\n\r\n\r\nconst Result = (props) => {\r\n    const {result} = props\r\n    return (\r\n      (result === presidents.length)\r\n      ? <h2 className=\"score\"><span className=\"gameWin\">Brawo! Znasz wszystkich polskich prezydentów!</span></h2>\r\n      : <h2 className=\"score\">Wynik: {result}/{presidents.length} </h2>\r\n      \r\n    )\r\n}\r\n\r\nResult.propTypes = {\r\n  result: PropTypes.number\r\n}\r\n\r\n\r\nexport default Result;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Clock.scss';\r\n\r\nconst Clock = (props) => {\r\n\r\n    const {minutes, seconds, lastSeconds} = props;\r\n\r\n    return(\r\n        <div className=\"clock\">\r\n          <h2>Pozostało czasu: <span className={lastSeconds ? \"lastSeconds\" : \"\"}>{minutes}:{seconds > 9 ? seconds : `0${seconds}`}</span></h2>\r\n        </div>\r\n      )\r\n}\r\n\r\nClock.propTypes = {\r\n    minutes: PropTypes.number,\r\n    seconds: PropTypes.number,\r\n    lastSeconds: PropTypes.bool,\r\n  }\r\n\r\nexport default Clock;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Clock from '../Clock/Clock';\r\nimport './GiveUp.scss';\r\n\r\nconst GiveUp = (props) => {\r\n    const {isGiveUpVisible, clickEnd, minutes, seconds, lastSeconds} = props\r\n    return (\r\n      <div className=\"end\">\r\n        <Clock minutes={minutes} seconds={seconds} lastSeconds={lastSeconds}/>\r\n        <button className={`btn btn-end ${isGiveUpVisible ? \"\" : \"hiddenGiveUp\"}`} onClick={clickEnd}>Poddaję się</button>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nGiveUp.propTypes = {\r\n  clickEnd: PropTypes.func,\r\n  isGiveUpVisible: PropTypes.bool,\r\n  minutes: PropTypes.number,\r\n  seconds: PropTypes.number,\r\n  lastSeconds: PropTypes.bool,\r\n}\r\n\r\nexport default GiveUp;","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nconst Footer = () => {\r\n\r\n  return (\r\n    <footer className=\"page__footer footer\">\r\n     <p className=\"footer__description\">&copy; Michał Lisowiec. All rights reserved.</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport PresidentsList from './PresidentsList/PresidentsList';\r\nimport AddPresident from './AddPresident/AddPresident';\r\nimport StartGame from './StartGame/StartGame';\r\nimport Result from './Result/Result';\r\nimport GiveUp from './GiveUp/GiveUp';\r\nimport Footer from './Footer/Footer';\r\nimport {presidents} from '../data/dataPresidents';\r\nimport '../styles/global.scss';\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isPresidentVisible: false,\r\n            minutes: 2,\r\n            seconds: 0,\r\n            result: 0,\r\n            isInputDisabled: true,\r\n            isQuizRunning: false,\r\n            isGiveUpVisible: false,\r\n            isPresidentGuessed: false,\r\n            lastSeconds: false,\r\n        }\r\n    }\r\n\r\n    handleChangeInput = (e) => {\r\n        const index = presidents.findIndex(president => (\r\n          president.lastName.toLowerCase() === e.target.value.toLowerCase() || `${president.name.toLowerCase()} ${president.lastName.toLowerCase()}` === e.target.value.toLowerCase()));\r\n        if(index !== -1){\r\n          presidents[index].isPresidentVisible = true;\r\n          const isPresidentVisible = presidents[index].isPresidentVisible;\r\n          presidents[index].isPresidentGuessed = true;\r\n          const isPresidentGuessed = presidents[index].isPresidentGuessed;\r\n          this.setState(({result}) => ({\r\n            isPresidentVisible,\r\n            isPresidentGuessed,\r\n            result: result + 1\r\n          }))\r\n          e.target.value = '';\r\n        }\r\n      }\r\n    \r\n    handleClick = () => {\r\n        this.setState({\r\n            isInputDisabled: false,\r\n            isQuizRunning: true,\r\n            isGiveUpVisible: true,\r\n          })\r\n        this.interval = setInterval(() => {\r\n          const {seconds, minutes} = this.state\r\n          if(seconds > 0){\r\n          this.setState(({seconds}) => ({\r\n            seconds: seconds - 1\r\n          }))\r\n          }\r\n          if(seconds === 0){\r\n            if(minutes === 0){\r\n                this.handleEndGame();\r\n            } else{\r\n              this.setState(({minutes}) => ({\r\n                minutes: minutes - 1,\r\n                seconds: 59\r\n              }))\r\n            }\r\n          }\r\n        },1000)\r\n      }\r\n\r\n      handleEndGame = () => {\r\n        clearInterval(this.interval)\r\n        this.setState({\r\n            isInputDisabled: true,\r\n            isGiveUpVisible: false,\r\n        })\r\n        presidents.forEach((president) => {\r\n            president.isPresidentVisible = true;\r\n            const isPresidentVisible = president.isPresidentVisible;\r\n            this.setState({\r\n                isPresidentVisible,\r\n            })\r\n        }\r\n        ) \r\n      }\r\n\r\n      componentDidUpdate(prevProps, prevState){\r\n        const {result, seconds, minutes} = this.state\r\n        if(prevState.result !== result){\r\n          if(result === presidents.length){\r\n            this.handleEndGame();\r\n          }\r\n        }\r\n        if(prevState.seconds !== seconds){\r\n          if(minutes === 0){\r\n            if(seconds <= 10){\r\n              this.setState({\r\n                lastSeconds: true,\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      componentWillUnmount(){\r\n        clearInterval(this.interval)\r\n      }\r\n\r\n\r\n    \r\n  render(){\r\n    const {isPresidentVisible, minutes, seconds, result, isInputDisabled, isQuizRunning, isGiveUpVisible, isPresidentGuessed, lastSeconds} = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <AddPresident \r\n            change={this.handleChangeInput} \r\n            isInputDisabled={isInputDisabled}\r\n        />\r\n        {isQuizRunning\r\n        ? <GiveUp \r\n            clickEnd={this.handleEndGame} \r\n            isGiveUpVisible={isGiveUpVisible} \r\n            minutes={minutes} \r\n            seconds={seconds} \r\n            lastSeconds={lastSeconds}\r\n          />\r\n        : <StartGame \r\n            clickStart={this.handleClick}\r\n          />}\r\n        <PresidentsList \r\n            isPresidentVisible={isPresidentVisible} \r\n            isPresidentGuessed={isPresidentGuessed}\r\n        />\r\n        <Result \r\n            result={result}\r\n        />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}